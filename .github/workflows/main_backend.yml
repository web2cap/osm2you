name: test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check_backend_changes:
    name: Check for changes in the backend directory
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Git
        run: git diff --name-only ${{ github.event.before || 'HEAD^' }} ${{ github.sha }} > changed_files.txt
      - name: Check if backend directory is modified
        id: backend_changes
        run: echo "::set-output name=changes::$(cat changed_files.txt | grep '^backend/')"
  # tests:
  #   runs-on: ubuntu-latest
  #   needs: check_backend_changes
  #   if: startsWith(needs.check_backend_changes.outputs.changes, 'backend/')
  #   services:
  #     postgres:
  #       image: postgis/postgis:16-3.4
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432
# 
  #   steps:
  #   - uses: actions/checkout@v2
# 
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: "3.10"
# 
  #   - name: Install dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y python3-pip
  #       pip install --upgrade pip
  #       sudo apt-get install -y libgdal-dev
  #       pip install poetry
  #       mkdir log
  #       cd backend/
  #       poetry config virtualenvs.create false
  #       poetry install
# 
  #   - name: Test with pytest
  #     env:
  #       ST_SECRET_KEY: +r@zjp=kc@qh#=ov6^vyvx0kb7g=11(*_^a3@%6en$-9_kr_)j
  #       DB_NAME: postgres
  #       DB_USER: postgres
  #       DB_PASSWORD: postgres
  #       DB_HOST: localhost
  #       DB_PORT: 5432
  #       GDAL_LIBRARY_PATH: /usr/lib/libgdal.so
  #     run: |
  #       pytest --reuse-db

  build_push_backend:
    name: Build and push to GitHub Container Registry
    runs-on: ubuntu-latest
    # needs: tests
    needs: check_backend_changes
    if: startsWith(needs.check_backend_changes.outputs.changes, 'backend/')
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push to GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}osm2you_backend:latest

  send_message:
    runs-on: ubuntu-latest
    needs: build_push_backend
    if: startsWith(needs.check_backend_changes.outputs.changes, 'backend/')
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} Completed successfully!