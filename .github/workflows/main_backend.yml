name: main_test_push_backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  changed_files:
    runs-on: ubuntu-latest 
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get all test and backend files that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@v40
        with:
          files_yaml: |
            tests:
              - tests/**
            backend:
              - backend/**

      - name: Set backend_any_changed
        id: set_backend_any_changed
        uses: noobly314/share-data@v1
        with:
          share-id: backend_any_changed
          mode: set
          key: status
          value: ${{ steps.changed-files-yaml.outputs.backend_any_changed }}
      
      - name: Set tests_any_changed
        id: set_tests_any_changed
        uses: noobly314/share-data@v1
        with:
          share-id: tests_any_changed
          mode: set
          key: status
          value: ${{ steps.changed-files-yaml.outputs.tests_any_changed }}
      
      - name: Print changes status
        run: |
          echo "backend_any_changed: ${{ steps.changed-files-yaml.outputs.backend_any_changed }}" 
          echo "tests_any_changed: ${{ steps.changed-files-yaml.outputs.tests_any_changed }}"

  debug_cf:
    runs-on: ubuntu-latest
    needs: changed_files
    steps:
      - name: Get backend_any_changed
        id: get_backend_any_changed
        uses: noobly314/share-data@v1
        with:
          share-id: backend_any_changed
          mode: get
          key: status
      - name: Debug environment variables
        run: |
          echo "${{ steps.get_backend_any_changed.outputs.data }}"
          echo "${{ steps.get_backend_any_changed.outputs.data.get_backend_any_changed }}"
          echo "${{ steps.get_backend_any_changed.outputs.data.get_backend_any_changed.status }}"
          

  tests:
    runs-on: ubuntu-latest
    needs: changed_files
    if: ${{ needs.changed_files.outputs.BACKEND_CHANGED }}
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip install --upgrade pip
        sudo apt-get install -y libgdal-dev
        pip install poetry
        mkdir log
        cd backend/
        poetry config virtualenvs.create false
        poetry install
    - name: Test with pytest
      env:
        ST_SECRET_KEY: +r@zjp=kc@qh#=ov6^vyvx0kb7g=11(*_^a3@%6en$-9_kr_)j
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        GDAL_LIBRARY_PATH: /usr/lib/libgdal.so
      run: |
        pytest --reuse-db
      

  build_push_backend:
    name: Build and push to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: tests
    if: needs.changed_files.outputs.test_any_changed == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push to GHCR
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}osm2you_backend:latest

  send_message:
    runs-on: ubuntu-latest
    needs: build_push_backend
    if: needs.changed_files.outputs.test_any_changed == 'true'
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} Completed successfully!