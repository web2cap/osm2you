# Generated by Django 4.2.5 on 2024-02-13 13:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0002_markercluster_updatedmarkercluster_marker"),
    ]

    operations = [
        migrations.CreateModel(
            name="Kind",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind_class",
                    models.CharField(
                        choices=[("main", "main"), ("related", "related")],
                        default="related",
                        help_text="Choice class for this kind",
                        max_length=32,
                        verbose_name="Kind class",
                    ),
                ),
                (
                    "priority",
                    models.SmallIntegerField(
                        default=2,
                        help_text="Fill priority for this kind property",
                        verbose_name="Kind priority",
                    ),
                ),
                ("value", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Marker kind",
                "verbose_name_plural": "Markers kinds",
                "ordering": ("-tag", "-value"),
            },
        ),
        migrations.CreateModel(
            name="KindGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("descriptive_name", models.CharField(max_length=128, null=True)),
                (
                    "icon",
                    models.CharField(
                        choices=[
                            ("fa-car", "Car"),
                            ("fa-bicycle", "Bicycle"),
                            ("fa-bus", "Bus"),
                            ("fa-train", "Train"),
                            ("fa-subway", "Subway"),
                            ("fa-truck", "Truck"),
                            ("fa-motorcycle", "Motorcycle"),
                            ("fa-plane", "Plane"),
                            ("fa-ship", "Ship"),
                            ("fa-space-shuttle", "Space Shuttle"),
                            ("fa-shopping-cart", "Shopping Cart"),
                            ("fa-shopping-bag", "Shopping Bag"),
                            ("fa-money", "Money"),
                            ("fa-credit-card", "Credit Card"),
                            ("fa-bank", "Bank"),
                            ("fa-wrench", "Wrench"),
                            ("fa-tools", "Tools"),
                            ("fa-medkit", "Medkit"),
                            ("fa-ambulance", "Ambulance"),
                            ("fa-fire-extinguisher", "Fire Extinguisher"),
                            ("fa-life-ring", "Life Ring"),
                            ("fa-life-saver", "Life Saver"),
                            ("fa-heartbeat", "Heartbeat"),
                            ("fa-heart", "Heart"),
                            ("fa-smile", "Smile"),
                            ("fa-frown", "Frown"),
                            ("fa-meh", "Meh"),
                            ("fa-grin", "Grin"),
                            ("fa-trophy", "Trophy"),
                            ("fa-futbol", "Soccer Ball"),
                            ("fa-baseball-ball", "Baseball"),
                            ("fa-basketball-ball", "Basketball"),
                            ("fa-football-ball", "Football"),
                            ("fa-golf-ball", "Golf Ball"),
                            ("fa-hockey-puck", "Hockey Puck"),
                            ("fa-volleyball-ball", "Volleyball"),
                            ("fa-bowling-ball", "Bowling Ball"),
                            ("fa-paw", "Paw"),
                            ("fa-leaf", "Leaf"),
                            ("fa-tree", "Tree"),
                            ("fa-seedling", "Seedling"),
                            ("fa-cogs", "Cogs"),
                            ("fa-globe", "Globe"),
                            ("fa-map", "Map"),
                            ("fa-compass", "Compass"),
                            ("fa-road", "Road"),
                            ("fa-diamond", "Diamond"),
                            ("fa-cut", "Cut"),
                            ("fa-graduation-cap", "Graduation Cap"),
                            ("fa-school", "School"),
                            ("fa-university", "University"),
                            ("fa-book", "Book"),
                            ("fa-pencil", "Pencil"),
                            ("fa-microphone", "Microphone"),
                            ("fa-music", "Music"),
                            ("fa-video", "Video"),
                            ("fa-image", "Image"),
                            ("fa-camera", "Camera"),
                            ("fa-headphones", "Headphones"),
                            ("fa-phone", "Phone"),
                            ("fa-envelope", "Envelope"),
                            ("fa-comments", "Comments"),
                            ("fa-comment", "Comment"),
                            ("fa-user", "User"),
                            ("fa-users", "Users"),
                            ("fa-group", "Group"),
                            ("fa-lock", "Lock"),
                            ("fa-key", "Key"),
                            ("fa-cog", "Cog"),
                            ("fa-exclamation", "Exclamation"),
                        ],
                        default="fa-leaf",
                        max_length=100,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("blue", "Blue"),
                            ("red", "Red"),
                            ("green", "Green"),
                            ("purple", "Purple"),
                            ("orange", "Orange"),
                            ("yellow", "Yellow"),
                            ("pink", "Pink"),
                            ("cyan", "Cyan"),
                            ("teal", "Teal"),
                            ("lime", "Lime"),
                            ("brown", "Brown"),
                            ("grey", "Grey"),
                            ("black", "Black"),
                            ("white", "White"),
                        ],
                        default="green",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Kind group",
                "verbose_name_plural": "Kinds groups",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="MarkerKind",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Marker kind value",
                "verbose_name_plural": "Markers kind value",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Creation date."
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "display_name",
                    models.CharField(default=None, max_length=255, null=True),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="TagValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Creation date."
                    ),
                ),
                ("value", models.CharField(default=None, max_length=255, null=True)),
                (
                    "marker",
                    models.ForeignKey(
                        help_text="Choice marker",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tag_value",
                        to="core.marker",
                        verbose_name="Marker",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        help_text="Specify value for tag",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tag_value",
                        to="core.tag",
                        verbose_name="Tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag value",
                "verbose_name_plural": "Tags values",
                "ordering": ("-tag",),
            },
        ),
        migrations.AddConstraint(
            model_name="tag",
            constraint=models.CheckConstraint(
                check=models.Q(("name__length__gte", 1)), name="name_min_length"
            ),
        ),
        migrations.AddField(
            model_name="markerkind",
            name="kind",
            field=models.ForeignKey(
                help_text="Choice kind value for marker",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="kind_value",
                to="core.kind",
                verbose_name="Marker Kind Value",
            ),
        ),
        migrations.AddField(
            model_name="markerkind",
            name="marker",
            field=models.OneToOneField(
                help_text="Choice marker",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="kind",
                to="core.marker",
                verbose_name="Marker",
            ),
        ),
        migrations.AddField(
            model_name="kind",
            name="kind_group",
            field=models.ForeignKey(
                help_text="Specify kind group",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="kind_tag",
                to="core.kindgroup",
                verbose_name="Kind Group",
            ),
        ),
        migrations.AddField(
            model_name="kind",
            name="tag",
            field=models.ForeignKey(
                help_text="Choice tag for describe kind",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="kind_tag",
                to="core.tag",
                verbose_name="Kind tag",
            ),
        ),
        migrations.AddConstraint(
            model_name="tagvalue",
            constraint=models.UniqueConstraint(
                fields=("tag", "marker"), name="unique_marker_tag"
            ),
        ),
        migrations.AddConstraint(
            model_name="tagvalue",
            constraint=models.CheckConstraint(
                check=models.Q(("value__length__gte", 1)), name="value_min_length"
            ),
        ),
        migrations.AddConstraint(
            model_name="kind",
            constraint=models.UniqueConstraint(
                fields=("tag", "value"), name="unique_kind_tag"
            ),
        ),
    ]
